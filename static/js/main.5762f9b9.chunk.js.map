{"version":3,"sources":["Components/ThemeContext/index.js","Components/HOC/withTheme/index.js","Components/Contact/index.js","Components/Filter/index.js","Components/InputForm/index.js","Components/ThemeButton.js","app.js","index.js"],"names":["themeConfig","lightTheme","fontColor","bodybg","darkTheme","ThemeContext","React","createContext","withTheme","WrappedComponent","props","Consumer","theme","Contact","contacts","filterValue","deleteCon","handleDelete","e","target","value","filterForm","el","key","id","className","nam","number","onClick","style","color","background","map","toLowerCase","includes","filter","defProps","onFilter","useState","setValue","type","onChange","onSubmit","setNumber","name","setName","handleChange","event","App","state","newContacts","setState","getKey","uuidv1","checkContact","array","find","element","handleFilter","valueToFind","handleSubmit","preventDefault","undefined","alert","handleClick","localContacts","JSON","parse","localStorage","getItem","this","localTheme","clear","setItem","stringify","Provider","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5762f9b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const themeConfig = {\r\n  lightTheme: {\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  darkTheme: {\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\nconst ThemeContext = React.createContext(themeConfig.lightTheme);\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport ThemeContext from '../../ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => <WrappedComponent {...props} theme={theme} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withTheme from '../HOC/withTheme';\r\nimport './style.scss';\r\n\r\nconst Contact = ({ contacts, filterValue, deleteCon, theme }) => {\r\n  const handleDelete = e => {\r\n    return deleteCon(e.target.value);\r\n  };\r\n\r\n  const filterForm = el => {\r\n    return (\r\n      <li key={el.id} className=\"contactCard\">\r\n        <p>{el.nam}: </p>\r\n        <p>{el.number}</p>\r\n        <button\r\n          className=\"contactCard__btn\"\r\n          value={el.id}\r\n          onClick={handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const filter = (filterValue, el) => {\r\n    if (filterValue) {\r\n      if (el.nam.toLowerCase().includes(filterValue.toLowerCase())) {\r\n        return filterForm(el);\r\n      } else {\r\n        return <></>;\r\n      }\r\n    } else {\r\n      return filterForm(el);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul\r\n      className=\"contactList\"\r\n      style={{ color: theme.fontColor, background: theme.bodybg }}\r\n    >\r\n      {contacts.map(el => {\r\n        return filter(filterValue, el);\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nContact.defProps = {\r\n  filterValue: '',\r\n};\r\n\r\nexport default withTheme(Contact);\r\n","import React, { useState } from 'react';\r\nimport withTheme from '../HOC/withTheme';\r\nimport './styles.scss';\r\n\r\nconst Filter = ({ onFilter, theme }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n    onFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"contactFormSearch\"\r\n      style={{\r\n        color: theme.fontColor,\r\n        background: theme.bodybg,\r\n      }}\r\n    >\r\n      <h2>Contacts</h2>\r\n      <form>\r\n        <label>Find a contact: </label>\r\n        <input type=\"text\" value={value} onChange={handleChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(Filter);\r\n","import React, { useState } from 'react';\r\nimport './style.scss';\r\nimport withTheme from '../HOC/withTheme';\r\n\r\nconst InputForm = ({ onSubmit, theme }) => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const submit = event => {\r\n    onSubmit(event, name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  const handleChange = event => {\r\n    if (event.target.type === 'number') {\r\n      return setNumber(event.target.value);\r\n    } else {\r\n      return setName(event.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ color: theme.fontColor, background: theme.bodybg }}>\r\n      <h1>Phonebook</h1>\r\n      <form onSubmit={submit} className=\"contactFormEl\">\r\n        <label>Name:</label>\r\n        <input type=\"text\" value={name} onChange={handleChange} />\r\n        <label>Number:</label>\r\n        <input type=\"number\" value={number} onChange={handleChange} />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Add contact\"\r\n          className=\"contactFormEl__button\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(InputForm);\r\n","import React from 'react';\r\nimport withTheme from './HOC/withTheme';\r\n\r\nconst ThemeButton = ({ onClick, theme }) => {\r\n  return (\r\n    <button\r\n      style={{ color: theme.fontColor, background: theme.bodybg }}\r\n      onClick={onClick}\r\n    >\r\n      Change theme!\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default withTheme(ThemeButton);\r\n","import React, { Component } from 'react';\r\nimport './sass/main.scss';\r\nimport Contact from './Components/Contact';\r\nimport Filter from './Components/Filter';\r\nimport InputForm from './Components/InputForm';\r\nimport ThemeContext from './Components/ThemeContext';\r\nimport ThemeButton from './Components/ThemeButton';\r\nimport { themeConfig } from './Components/ThemeContext';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport './app.scss';\r\nlet key = '';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    theme: 'lightTheme',\r\n  };\r\n\r\n  handleDelete = key => {\r\n    const newContacts = this.state.contacts.filter(el => el.id !== key);\r\n    this.setState({ contacts: newContacts });\r\n  };\r\n\r\n  getKey = () => {\r\n    return (key = uuidv1());\r\n  };\r\n\r\n  checkContact = (array, name) => {\r\n    return array.find(element => element.nam === name);\r\n  };\r\n\r\n  handleFilter = valueToFind => {\r\n    this.setState({ filter: valueToFind });\r\n  };\r\n  handleSubmit = (event, name, number) => {\r\n    this.getKey();\r\n    event.preventDefault();\r\n    if (this.checkContact(this.state.contacts, name) === undefined) {\r\n      if (name !== '' && number !== '') {\r\n        this.setState({\r\n          contacts: [\r\n            ...this.state.contacts,\r\n            { nam: name, id: key, number: number },\r\n          ],\r\n        });\r\n      }\r\n    } else return alert(name + ' is already exist!');\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (localContacts != null) {\r\n      this.setState({ contacts: localContacts });\r\n    }\r\n    const localTheme = JSON.parse(localStorage.getItem('theme'));\r\n    if (localTheme != null) {\r\n      this.setState({ theme: localTheme });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.clear();\r\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    localStorage.setItem('theme', JSON.stringify(this.state.theme));\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.theme === 'lightTheme') {\r\n      this.setState({ theme: 'darkTheme' });\r\n    } else {\r\n      this.setState({ theme: 'lightTheme' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts, theme } = this.state;\r\n    return (\r\n      <div style={{ background: themeConfig[theme].bodybg }}>\r\n        <ThemeContext.Provider value={themeConfig[theme]}>\r\n          <div className=\"container\">\r\n            <ThemeButton onClick={this.handleClick} />\r\n            <InputForm onSubmit={this.handleSubmit} />\r\n            <Filter onFilter={this.handleFilter} />\r\n            <Contact\r\n              deleteCon={this.handleDelete}\r\n              contacts={contacts}\r\n              filterValue={filter}\r\n            />\r\n          </div>\r\n        </ThemeContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}